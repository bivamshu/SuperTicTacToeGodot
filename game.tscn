[gd_scene load_steps=8 format=3 uid="uid://dhp33w2uuqhin"]

[ext_resource type="PackedScene" uid="uid://ch0bqr3wr75rc" path="res://board.tscn" id="1_dvytb"]
[ext_resource type="PackedScene" uid="uid://dm7b52kvf7kai" path="res://knots.tscn" id="1_nxsxf"]
[ext_resource type="PackedScene" uid="uid://cnq8uxa1yc885" path="res://cross.tscn" id="2_xcrcd"]
[ext_resource type="PackedScene" uid="uid://coxp21uvissr1" path="res://game_over_menu.tscn" id="4_78f08"]

[sub_resource type="GDScript" id="GDScript_7bcvy"]
script/source = "extends Node

@export var circle_scene : PackedScene
@export var cross_scene : PackedScene

var player: int 
var moves: int
var winner: int
var temp_marker
var player_panel_pos: Vector2i
var grid_data: Array
var grid_pos: Vector2i
var board_size: int
var cell_size: int
var row_sum: int 
var col_sum: int 
var diagonal1_sum: int 
var diagonal2_sum: int

# Called when the node enters the scene tree for the first time.
func _ready():
	board_size = $Board.texture.get_width()
	#divide board size by 3 to get cell size 
	cell_size = board_size/3
	#get coordinates of small panel on right side of window
	player_panel_pos = $PlayerPanel.get_position()
	new_game()
	
# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	pass
	
func _input(event):
	if event is InputEventMouseButton:
		if event.button_index == MOUSE_BUTTON_LEFT and event.pressed:
			#check is mouse click is outsie the keyboard.
			if event.position.x < board_size:
				#convert mouse position into vector position
				grid_pos = Vector2i(event.position / cell_size)
				if grid_data[grid_pos.y][grid_pos.x] == 0:
					moves+= 1
					grid_data[grid_pos.y][grid_pos.x] = player
					#place that player's marker
					create_marker(player, grid_pos * cell_size + Vector2i(cell_size / 2, cell_size / 2))
					if check_win() != 0:
						get_tree().paused = true
						$GameOverMenu.show()
						if winner == 1:
							$GameOverMenu.get_node(\"ResultLabel\").text = \"Player 1 Wins!\"
						elif winner == -1:
							$GameOverMenu.get_node(\"ResultLabel\").text = \"Player 2 Wins!\"
					#check if the board has been filled
					elif moves == 9:
						get_tree().paused = true
						$GameOverMenu.show()
						$GameOverMenu.get_node(\"ResultLabel\").text = \"Tie!\"
					player *= -1
					#update the panel marker
					temp_marker.queue_free()
					create_marker(player, player_panel_pos + Vector2i(cell_size / 2, cell_size / 2), true)
					print(grid_data)

func new_game():
	player = 1
	winner = 0
	moves = 0
	grid_data = [
				[0, 0, 0], 
				[0, 0, 0],
				[0, 0, 0]]
	row_sum = 0
	col_sum = 0
	diagonal1_sum = 0
	diagonal2_sum = 0
	#clear existing markers
	get_tree().call_group(\"circles\", \"queue_free\")
	get_tree().call_group(\"crosses\", \"queue_free\")
	#create a marker to show starting player's turn
	create_marker(player, player_panel_pos + Vector2i(cell_size/2, cell_size/2), true)
	$GameOverMenu.hide()
	get_tree().paused = false

				
func create_marker(player, position, temp = false):
	if player == 1:
		var circle = circle_scene.instantiate()
		circle.position = position
		add_child(circle)
		if temp: temp_marker = circle
	else:
		var cross = cross_scene.instantiate()
		cross.position = position
		add_child(cross)
		if temp: temp_marker = cross
	
func check_win():
	for i in len(grid_data):
		row_sum = grid_data[i][0] + grid_data[i][1] + grid_data[i][2]
		col_sum = grid_data[0][i] + grid_data[1][i] + grid_data[2][i]
		diagonal1_sum = grid_data[0][0] + grid_data[1][1] + grid_data[2][2]
		diagonal2_sum = grid_data[0][2] + grid_data[1][1] + grid_data[2][0]
		
		if row_sum == 3 or col_sum == 3 or diagonal1_sum == 3 or diagonal2_sum == 3:
			winner = 1
		elif row_sum == -3 or col_sum == -3 or diagonal1_sum == -3 or diagonal2_sum == -3:
			winner = -1
	
	return winner
		


func _on_game_over_menu_restart():
	new_game()
"

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_xyn8y"]
bg_color = Color(0, 0, 0, 0.309804)
border_color = Color(0.00820203, 0.00820202, 0.00820201, 1)

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_66144"]
bg_color = Color(1, 1, 1, 1)
border_width_left = 5
border_width_top = 5
border_width_right = 5
border_width_bottom = 5
corner_radius_top_left = 10
corner_radius_top_right = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10

[node name="main" type="Node"]
script = SubResource("GDScript_7bcvy")
circle_scene = ExtResource("1_nxsxf")
cross_scene = ExtResource("2_xcrcd")

[node name="Board" parent="." instance=ExtResource("1_dvytb")]
position = Vector2(300, 300)

[node name="sidepanel" type="Panel" parent="."]
custom_minimum_size = Vector2(300, 600)
anchors_preset = 11
anchor_left = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = -547.0
offset_top = -3.0
offset_right = -247.0
offset_bottom = -3.0
grow_horizontal = 0
grow_vertical = 2
size_flags_horizontal = 8
theme_override_styles/panel = SubResource("StyleBoxFlat_xyn8y")

[node name="PlayerLabel" type="Label" parent="."]
offset_left = 600.0
offset_top = 120.0
offset_right = 900.0
offset_bottom = 195.0
theme_override_font_sizes/font_size = 25
text = "Next Player
"
horizontal_alignment = 1
vertical_alignment = 1

[node name="PlayerPanel" type="Label" parent="."]
offset_left = 650.0
offset_top = 200.0
offset_right = 850.0
offset_bottom = 400.0
theme_override_styles/normal = SubResource("StyleBoxFlat_66144")

[node name="GameOverMenu" parent="." instance=ExtResource("4_78f08")]
process_mode = 2

[connection signal="restart" from="GameOverMenu" to="." method="_on_game_over_menu_restart"]
